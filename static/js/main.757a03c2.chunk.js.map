{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,8BACIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEdC,EAZG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACG,uBAAOA,UAAY,mCACnBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCENI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAS,SAAxE,SACKJ,EAAMK,aCmBJC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,0DAGJG,KAAKX,MAAMK,a,GAjBEQ,aCoDbC,E,kDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAc,IAJT,E,gEAQO,IAAD,OACfyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAOlC,IAAD,EAC4BZ,KAAKJ,MAA7BlB,EADJ,EACIA,OAAQK,EADZ,EACYA,YACV8B,EAAiBnC,EAAOoC,QAAQ,SAAAC,GAClC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGzD,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAY,KAAhB,qBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAASmC,WAPnC,gD,GA1BMX,aCDHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.757a03c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    // if (true){\r\n    //     throw new Error('I mean...');\r\n    // }\r\n    return(\r\n        <div>{\r\n            robots.map((user, i)=> {\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                ); \r\n            })        \r\n        }</div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) =>{\r\n    return(\r\n        <div className='pa2'>\r\n           <input className = 'pa3 ba b--green bg-lightest-blue'\r\n           type='search' \r\n           placeholder='search robots'\r\n           onChange={searchChange}\r\n           />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY : 'scroll', border: '1px solid black', height : '500px'}}>\r\n            {props.children}\r\n        </div>      \r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n    \r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport { robots } from '../robots';\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nconst state = {\r\n    robots: robots,\r\n    searchfield : ''\r\n}\r\n \r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter( robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1>Loading...</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className = 'f1'>William</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>    \r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots ={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}